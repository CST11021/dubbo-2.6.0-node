
在 RPC 中，Protocol 是核心层，也就是只要有 Protocol + Invoker + Exporter
就可以完成非透明的 RPC 调用，然后在 Invoker 的主过程上 Filter 拦截点。

config 配置层：
    对外配置接口，以  ServiceConfig  ,  ReferenceConfig 为中心，可以直接初始化配置类，也可以通过 spring 解析
    配置生成配置类

proxy 服务代理层：
    服务接口透明代理，生成服务的客户端 Stub 和服务器端Skeleton, 以  ServiceProxy  为中心，扩展接口为  ProxyFactory

registry 注册中心层：
    封装服务地址的注册与发现，以服务 URL 为中心，扩展接口为  RegistryFactory  ,  Registry  ,  RegistryService

cluster 路由层：
    封装多个提供者的路由及负载均衡，并桥接注册中心，以Invoker  为中心，扩展接口为  Cluster  ,  Directory  ,  Router  ,
    LoadBalance

monitor 监控层：
    RPC 调用次数和调用时间监控，以  Statistics  为中心，扩展接口为  MonitorFactory  ,  Monitor  ,  MonitorService

protocol 远程调用层：
    封将 RPC 调用，以  Invocation  ,  Result  为中心，扩展接口为  Protocol  ,  Invoker  ,  Exporter

exchange 信息交换层：
    封装请求响应模式，同步转异步，以  Request  ,Response  为中心，扩展接口为  Exchanger  ,  ExchangeChannel  ,
    ExchangeClient  ,  ExchangeServer

transport 网络传输层：
    抽象 mina 和 netty 为统一接口，以  Message  为中
    心，扩展接口为  Channel  ,  Transporter  ,  Client  ,  Server  ,  Codec

serialize 数据序列化层：
    可复用的一些工具，扩展接口为  Serialization  ,ObjectInput  ,  ObjectOutput  ,  ThreadPool


模块划分：

    dubbo-remoting 远程通讯模块，相当于Dubbo协议的实现，如果RPC用RMI协议则不需要使用此包。